<?php

namespace Proxies\__CG__\Beon\IntranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contact extends \Beon\IntranetBundle\Entity\Contact implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'firstName', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'lastName', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'phone', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'mobile', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'email', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'role', 'suppliergroups', 'cities', 'customers', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'birthday', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'notes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'suppliers');
        }

        return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'firstName', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'lastName', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'phone', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'mobile', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'email', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'role', 'suppliergroups', 'cities', 'customers', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'birthday', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'notes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Contact' . "\0" . 'suppliers');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contact $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobile($mobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobile', array($mobile));

        return parent::setMobile($mobile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobile', array());

        return parent::getMobile();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', array($role));

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array());

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupplier(\Beon\IntranetBundle\Entity\Supplier $suppliers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupplier', array($suppliers));

        return parent::addSupplier($suppliers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupplier(\Beon\IntranetBundle\Entity\Supplier $suppliers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupplier', array($suppliers));

        return parent::removeSupplier($suppliers);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuppliers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuppliers', array());

        return parent::getSuppliers();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupplierGroup(\Beon\IntranetBundle\Entity\SupplierGroup $suppliergroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupplierGroup', array($suppliergroups));

        return parent::addSupplierGroup($suppliergroups);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupplierGroup(\Beon\IntranetBundle\Entity\SupplierGroup $suppliergroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupplierGroup', array($suppliergroups));

        return parent::removeSupplierGroup($suppliergroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuppliergroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuppliergroups', array());

        return parent::getSuppliergroups();
    }

    /**
     * {@inheritDoc}
     */
    public function addCity(\Beon\IntranetBundle\Entity\City $cities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCity', array($cities));

        return parent::addCity($cities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCity(\Beon\IntranetBundle\Entity\City $cities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCity', array($cities));

        return parent::removeCity($cities);
    }

    /**
     * {@inheritDoc}
     */
    public function getCities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCities', array());

        return parent::getCities();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', array());

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', array());

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday($birthday)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', array($birthday));

        return parent::setBirthday($birthday);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', array());

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', array($notes));

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function addCustomer(\Beon\IntranetBundle\Entity\Customer $customers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCustomer', array($customers));

        return parent::addCustomer($customers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCustomer(\Beon\IntranetBundle\Entity\Customer $customers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCustomer', array($customers));

        return parent::removeCustomer($customers);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomers', array());

        return parent::getCustomers();
    }

}
