<?php

namespace Proxies\__CG__\Beon\IntranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Upload extends \Beon\IntranetBundle\Entity\Upload implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'filename', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'fsFilename', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'mimeType', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'size', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'createdat', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'note', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'pressrelease', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'campaign', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'customer', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'supplier', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'supplierGroup', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'task', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'isInvoice', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'groupFlag41', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'groupFlag42', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'submitFlag');
        }

        return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'filename', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'fsFilename', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'mimeType', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'size', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'createdat', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'note', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'pressrelease', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'campaign', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'customer', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'supplier', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'supplierGroup', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'task', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'isInvoice', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'groupFlag41', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'groupFlag42', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Upload' . "\0" . 'submitFlag');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Upload $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilename($filename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilename', array($filename));

        return parent::setFilename($filename);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilename', array());

        return parent::getFilename();
    }

    /**
     * {@inheritDoc}
     */
    public function getFsFilename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFsFilename', array());

        return parent::getFsFilename();
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', array());

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType($mimeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', array($mimeType));

        return parent::setMimeType($mimeType);
    }

    /**
     * {@inheritDoc}
     */
    public function setFsFilename($fsFilename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFsFilename', array($fsFilename));

        return parent::setFsFilename($fsFilename);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', array());

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', array($size));

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedat', array());

        return parent::getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote(\Beon\IntranetBundle\Entity\Note $note = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', array($note));

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', array());

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setPressrelease(\Beon\IntranetBundle\Entity\Pressrelease $pressrelease = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPressrelease', array($pressrelease));

        return parent::setPressrelease($pressrelease);
    }

    /**
     * {@inheritDoc}
     */
    public function getPressrelease()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPressrelease', array());

        return parent::getPressrelease();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaign(\Beon\IntranetBundle\Entity\Campaign $campaign = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaign', array($campaign));

        return parent::setCampaign($campaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaign', array());

        return parent::getCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedat($createdat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedat', array($createdat));

        return parent::setCreatedat($createdat);
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplier(\Beon\IntranetBundle\Entity\Supplier $supplier = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplier', array($supplier));

        return parent::setSupplier($supplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplier', array());

        return parent::getSupplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierGroup(\Beon\IntranetBundle\Entity\SupplierGroup $supplierGroup = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierGroup', array($supplierGroup));

        return parent::setSupplierGroup($supplierGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierGroup', array());

        return parent::getSupplierGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setTask(\Beon\IntranetBundle\Entity\Task $task = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTask', array($task));

        return parent::setTask($task);
    }

    /**
     * {@inheritDoc}
     */
    public function getTask()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTask', array());

        return parent::getTask();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Beon\IntranetBundle\Entity\Customer $customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsInvoice($isInvoice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsInvoice', array($isInvoice));

        return parent::setIsInvoice($isInvoice);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsInvoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsInvoice', array());

        return parent::getIsInvoice();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupFlag41($groupFlag41)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupFlag41', array($groupFlag41));

        return parent::setGroupFlag41($groupFlag41);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupFlag41()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupFlag41', array());

        return parent::getGroupFlag41();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupFlag42($groupFlag42)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupFlag42', array($groupFlag42));

        return parent::setGroupFlag42($groupFlag42);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupFlag42()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupFlag42', array());

        return parent::getGroupFlag42();
    }

    /**
     * {@inheritDoc}
     */
    public function getTagColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTagColor', array());

        return parent::getTagColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmitFlag($submitFlag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmitFlag', array($submitFlag));

        return parent::setSubmitFlag($submitFlag);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitFlag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitFlag', array());

        return parent::getSubmitFlag();
    }

}
