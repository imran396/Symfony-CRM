<?php

namespace Proxies\__CG__\Beon\IntranetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Pressrelease extends \Beon\IntranetBundle\Entity\Pressrelease implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvalmailsent', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approved', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'deleted', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'submitted', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'title', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'createdat', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvedAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvalMailSentAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'submittedAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'uploads', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'customer', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvedBy', 'user', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'duplicateOf', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'notes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'pressreleasenotes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'tasks', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvementSender', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'type', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'lastApprovalMailSentAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'serializedApprovalMail', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'campaign');
        }

        return array('__isInitialized__', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'id', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvalmailsent', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approved', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'deleted', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'submitted', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'title', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'createdat', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvedAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvalMailSentAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'submittedAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'uploads', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'customer', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvedBy', 'user', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'duplicateOf', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'notes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'pressreleasenotes', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'tasks', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'approvementSender', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'type', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'lastApprovalMailSentAt', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'serializedApprovalMail', '' . "\0" . 'Beon\\IntranetBundle\\Entity\\Pressrelease' . "\0" . 'campaign');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Pressrelease $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovalmailsent($approvalmailsent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovalmailsent', array($approvalmailsent));

        return parent::setApprovalmailsent($approvalmailsent);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovalmailsent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovalmailsent', array());

        return parent::getApprovalmailsent();
    }

    /**
     * {@inheritDoc}
     */
    public function setApproved($approved)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApproved', array($approved));

        return parent::setApproved($approved);
    }

    /**
     * {@inheritDoc}
     */
    public function getApproved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApproved', array());

        return parent::getApproved();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($deleted));

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', array());

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedat', array());

        return parent::getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovedAt($approvedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovedAt', array($approvedAt));

        return parent::setApprovedAt($approvedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedAt', array());

        return parent::getApprovedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addUpload(\Beon\IntranetBundle\Entity\Upload $uploads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpload', array($uploads));

        return parent::addUpload($uploads);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload(\Beon\IntranetBundle\Entity\Upload $uploads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', array($uploads));

        return parent::removeUpload($uploads);
    }

    /**
     * {@inheritDoc}
     */
    public function getUploads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploads', array());

        return parent::getUploads();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Beon\IntranetBundle\Entity\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovedBy(\Beon\IntranetBundle\Entity\User $approvedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovedBy', array($approvedBy));

        return parent::setApprovedBy($approvedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedBy', array());

        return parent::getApprovedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovalMailSentAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovalMailSentAt', array());

        return parent::getApprovalMailSentAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovalMailSentAt($approvalMailSentAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovalMailSentAt', array($approvalMailSentAt));

        return parent::setApprovalMailSentAt($approvalMailSentAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmitted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmitted', array());

        return parent::getSubmitted();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmitted($submitted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmitted', array($submitted));

        return parent::setSubmitted($submitted);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmittedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmittedAt', array());

        return parent::getSubmittedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmittedAt($submittedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmittedAt', array($submittedAt));

        return parent::setSubmittedAt($submittedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedat($createdat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedat', array($createdat));

        return parent::setCreatedat($createdat);
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\Beon\IntranetBundle\Entity\Note $notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', array($notes));

        return parent::addNote($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\Beon\IntranetBundle\Entity\Note $notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', array($notes));

        return parent::removeNote($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', array());

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addTask(\Beon\IntranetBundle\Entity\Task $tasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTask', array($tasks));

        return parent::addTask($tasks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTask(\Beon\IntranetBundle\Entity\Task $tasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTask', array($tasks));

        return parent::removeTask($tasks);
    }

    /**
     * {@inheritDoc}
     */
    public function getTasks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTasks', array());

        return parent::getTasks();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovementSender(\Beon\IntranetBundle\Entity\User $approvementSender = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovementSender', array($approvementSender));

        return parent::setApprovementSender($approvementSender);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovementSender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovementSender', array());

        return parent::getApprovementSender();
    }

    /**
     * {@inheritDoc}
     */
    public function getPressreleasenotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPressreleasenotes', array());

        return parent::getPressreleasenotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setPressreleasenotes($pressreleasenotes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPressreleasenotes', array($pressreleasenotes));

        return parent::setPressreleasenotes($pressreleasenotes);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Beon\IntranetBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getDuplicateOf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuplicateOf', array());

        return parent::getDuplicateOf();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuplicateOf($duplicateOf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuplicateOf', array($duplicateOf));

        return parent::setDuplicateOf($duplicateOf);
    }

    /**
     * {@inheritDoc}
     */
    public function resetState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetState', array());

        return parent::resetState();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\Beon\IntranetBundle\Entity\EnumValue $type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastApprovalMailSentAt($lastApprovalMailSentAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastApprovalMailSentAt', array($lastApprovalMailSentAt));

        return parent::setLastApprovalMailSentAt($lastApprovalMailSentAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastApprovalMailSentAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastApprovalMailSentAt', array());

        return parent::getLastApprovalMailSentAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedApprovalMail($serializedApprovalMail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedApprovalMail', array($serializedApprovalMail));

        return parent::setSerializedApprovalMail($serializedApprovalMail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedApprovalMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedApprovalMail', array());

        return parent::getSerializedApprovalMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaign(\Beon\IntranetBundle\Entity\Campaign $campaign = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaign', array($campaign));

        return parent::setCampaign($campaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaign', array());

        return parent::getCampaign();
    }

}
