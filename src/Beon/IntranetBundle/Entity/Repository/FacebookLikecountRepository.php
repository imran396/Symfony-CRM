<?php

namespace Beon\IntranetBundle\Entity\Repository;

use Beon\IntranetBundle\Entity\FacebookLikecount;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * FacebookLikecountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FacebookLikecountRepository extends EntityRepository
{
    public function saveLikeCount($url,$fbFans,$date)
    {
          $entity = new FacebookLikecount();
          $entity->setFacebookUrl($url);
          $entity->setLikecount($fbFans);
          $entity->setDate($date);
          $this->_em->persist($entity);
          $this->_em->flush();

    }

    public function findTodaysRecordForUrl($url)
    {
       return $this->findOneBy(array('facebookUrl'=>$url,'date'=> new \DateTime()));

    }

    public function updateFacebookLike($id,$like)
    {
        $facebook = $this->find($id);

        if (!$facebook) {
            throw $this->createNotFoundException(
                'No Customer found for id ' . $id
            );
        }

        $facebook->setLikecount($like);
        $this->_em->persist($facebook);
        $this->_em->flush();

    }

    public function getLikeData($urlId){
        return $this->findBy(array('facebookUrl'=>$urlId), array('date' => 'ASC'));
    }

    public function updateIsPostThatDay($url,$postedDateTime){

        $facebookLikeCountByDate = $this->findOneBy(array('facebookUrl'=>$url,'date'=> new \DateTime($postedDateTime)));

        if($facebookLikeCountByDate){
            $facebookLikeCountByDate->setIsPosted(1);
            $this->_em->persist($facebookLikeCountByDate);
            $this->_em->flush();

        }
    }


}
